name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ vars.DOCKERHUB_USERNAME }}/ircc-tracker

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=semver,pattern={{version}},enable=${{ startsWith(github.event.inputs.release_tag, 'v') }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create Release
        if: startsWith(github.event.inputs.release_tag, 'v')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.release_tag }}
          name: Release ${{ github.event.inputs.release_tag }}
          draft: false
          prerelease: false
          generate_release_notes: true
          body: |
            ## Docker Image

            ### Pull Image
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.release_tag }}
            ```

            ### Run Container
            ```bash
            docker run -d \
              -p 5000:5000 \
              -e MONGODB_URL=mongodb://mongodb:27017/ircc_tracker \
              -e SMTP_SERVER=smtp.gmail.com \
              -e SMTP_PORT=587 \
              -e SMTP_USERNAME=your-email@gmail.com \
              -e SMTP_PASSWORD=your-app-password \
              -e SENDER_EMAIL=your-email@gmail.com \
              -e SECRET_KEY=your-secret-key \
              -e ADMIN_EMAIL=admin@example.com \
              -e ADMIN_PASSWORD=admin-password \
              --name ircc-tracker \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.release_tag }}
            ```

            ### Docker Compose
            ```yaml
            version: '3.8'
            services:
              app:
                image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.release_tag }}
                ports:
                  - "5000:5000"
                environment:
                  - MONGODB_URL=mongodb://mongodb:27017/ircc_tracker
                  - SMTP_SERVER=smtp.gmail.com
                  - SMTP_PORT=587
                  - SMTP_USERNAME=${SMTP_USERNAME}
                  - SMTP_PASSWORD=${SMTP_PASSWORD}
                  - SENDER_EMAIL=${SENDER_EMAIL}
                  - SECRET_KEY=${SECRET_KEY}
                  - ADMIN_EMAIL=${ADMIN_EMAIL}
                  - ADMIN_PASSWORD=${ADMIN_PASSWORD}
                depends_on:
                  - mongodb
                restart: unless-stopped

              mongodb:
                image: mongo:latest
                ports:
                  - "27017:27017"
                volumes:
                  - mongodb_data:/data/db
                restart: unless-stopped

            volumes:
              mongodb_data:
            ```
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 